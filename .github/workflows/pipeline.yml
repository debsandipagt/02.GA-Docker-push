name: pipeline

on: [push]
env: 
  APPLICATION_NAME: app_0.01

jobs: 
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: checkout-code
      uses: actions/checkout@v4
    - name: Setup python environment
      uses: actions/setup-python@v4
    - name: Install requirements
      run: |
        pip install --quiet --requirement requirements.txt
    - name: Lint code
      run: |
        flake8 --ignore=E501,E231 *.py
        pylint --disable=C0301,C0326 *.py
    - name: Run unit test
      run: python -m unittest --verbose --failfast
  
  build-image: 
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v4
    - name: Authenticate with google cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
    - name: Setup google cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    - run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set run/region ${{ secrets.GCP_REGION }}
        gcloud auth configure-docker
        gcloud info
    - name: build and tag image
      run: docker build -t "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest" .
    - name: Push docker image
      run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest

  test-image:
    needs: [build-image]
    runs-on: ubuntu-latest
    steps:
    - name: checkout-code
      uses: actions/checkout@v4
    - name: authenticate with gcloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
    - name: setup gcloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    - run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set run/region ${{ secrets.GCP_REGION }}
        gcloud auth configure-docker
        gcloud info
    - name: run unit test on container
      run: docker run "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest" -m unittest --verbose --failfast
  
  deploy:
    needs: [test-image]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Authenticate with gcloud
      uses: google-github-actions/auth@v2
          
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
    - name: Set up cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with: 
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    - run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set run/region ${{ secrets.GCP_REGION }}
        gcloud auth configure-docker
        gcloud info
    - name: Deploy to cloud run
      run: gcloud run deploy ${{ env.APPLICATION_NAME }} --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest --platform=managed --allow-unauthenticated

    - name: Test Deployment
      run: |
        DEPLOY_URL=$(gcloud run services describe app2 --platform=managed --region=us-central1 | grep https)
        curl -sL --max-time 300 -o /dev/null -w "%{http_code}" $DEPLOY_URL | grep 200 || exit 1
